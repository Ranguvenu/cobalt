{"version":3,"sources":["../src/upload.js"],"names":["define","$","Str","ModalFactory","ModalEvents","Fragment","Ajax","upload","args","contextid","context","self","init","prototype","get_string","then","title","create","type","types","DEFAULT","body","getBody","footer","getFooter","bind","modal","setLarge","getRoot","on","hidden","animate","setTimeout","destroy","find","submitForm","hide","window","location","reload","form","submitFormAjax","show","formdata","jsonformdata","JSON","stringify","loadFragment","$footer","handleFormSubmissionFailure","data","setBody","e","preventDefault","formData","serialize","params","promise","call","methodname","done","fail","submit","load"],"mappings":"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","sourcesContent":["define(['jquery', 'core/str', 'core/modal_factory', 'core/modal_events', 'core/fragment', 'core/ajax', 'core/yui'],\r\n        function($, Str, ModalFactory, ModalEvents, Fragment, Ajax, Y) {\r\n\tvar upload = function(args) {\r\n        this.contextid = args.context;\r\n        var self = this;\r\n        this.args = args;\r\n        self.init(args);\r\n    };\r\n\r\n    // upload.prototype.modal = null;\r\n    // upload.prototype.contextid = -1;\r\n    upload.prototype.init = function(args) {\r\n        var self = this;\r\n        return Str.get_string('uploadvideo', 'mod_stream').then(function(title) {\r\n                // Create the modal.\r\n                return ModalFactory.create({\r\n                type: ModalFactory.types.DEFAULT,\r\n                title: title,\r\n                body: this.getBody(),\r\n                footer: this.getFooter(),\r\n                });\r\n            }.bind(this)).then(function(modal) {\r\n                // Keep a reference to the modal.\r\n                this.modal = modal;\r\n                // self.modal.show();\r\n                // Forms are big, we want a big modal.\r\n                this.modal.setLarge(); \r\n                \r\n\r\n                // this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                //     this.modal.setBody('');\r\n                this.modal.getRoot().on(ModalEvents.hidden, function() {\r\n                    this.modal.getRoot().animate({\"right\":\"-85%\"}, 500);\r\n                    setTimeout(function(){\r\n                        modal.destroy();\r\n                    }, 500);\r\n                }.bind(this));\r\n\r\n                this.modal.getFooter().find('[data-action=\"save\"]').on('click', this.submitForm.bind(this));\r\n                // We also catch the form submit event and use it to submit the form with ajax.\r\n\r\n                // this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\r\n                //     modal.setBody('');\r\n                //     modal.hide();\r\n                this.modal.getFooter().find('[data-action=\"cancel\"]').on('click', function() {\r\n                    modal.hide();\r\n                    setTimeout(function(){\r\n                        modal.destroy();\r\n                    }, 500);\r\n                    window.location.reload();\r\n                    // modal.destroy();\r\n                });\r\n\r\n                this.modal.getRoot().on('submit', 'form', function(form) {\r\n                    self.submitFormAjax(form, self.args);\r\n                });\r\n                this.modal.show();\r\n\r\n                return this.modal;\r\n            }.bind(this));\r\n    };\r\n    upload.prototype.getBody = function(formdata) {\r\n        if (typeof formdata === \"undefined\") {\r\n            formdata = {};\r\n        }\r\n        this.args.jsonformdata = JSON.stringify(formdata);\r\n        return Fragment.loadFragment('mod_stream', 'upload_video', this.contextid, this.args);\r\n    };\r\n    upload.prototype.getFooter = function() {\r\n        $footer = '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">Save & Continue</button>&nbsp;';\r\n        $footer += '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">Cancel</button>';\r\n        return $footer;\r\n    };\r\n    upload.prototype.handleFormSubmissionFailure = function(data) {\r\n        // Oh noes! Epic fail :(\r\n        // Ah wait - this is normal. We need to re-display the form with errors!\r\n        this.modal.setBody(this.getBody(data));\r\n    };\r\n    upload.prototype.submitFormAjax = function(e ,args) {\r\n        // We don't want to do a real form submission.\r\n        e.preventDefault();\r\n        var self = this;\r\n        // Convert all the form elements values to a serialised string.\r\n        var formData = this.modal.getRoot().find('form').serialize();\r\n        // var methodname = args.plugintype + '_' + args.pluginname + '_submit_create_user_form';\r\n        var methodname = 'mod_stream_upload_video';\r\n        var params = {};\r\n        params.contextid = this.contextid;\r\n        params.jsonformdata = JSON.stringify(formData);\r\n        var promise = Ajax.call([{\r\n            methodname: methodname,\r\n            args: params\r\n        }]);\r\n\r\n         promise[0].done(function(resp){\r\n            self.modal.hide();\r\n            window.location.reload();\r\n        }).fail(function(ex){\r\n            self.handleFormSubmissionFailure(formData);\r\n        });\r\n    };\r\n    upload.prototype.submitForm = function(e) {\r\n        e.preventDefault();\r\n        var self = this;\r\n        self.modal.getRoot().find('form').submit();\r\n    };\r\n\treturn {\r\n\t\tinit: function(args) {\r\n            return new upload(args);\r\n        },\r\n        load: function(){\r\n\r\n        }\r\n\t}\r\n});"],"file":"upload.min.js"}