{"version":3,"sources":["../src/streamcontent.js"],"names":["define","$","Notification","Templates","PagedContentFactory","Str","streamVideosRepository","RenderStream","CustomEvents","length","videosOffset","StatusFilter","SortFilter","SearchFilter","TotalNumberOfVideos","SELECTORS","EMPTY_MESSAGE","ROOT","STREAM_LIST_CONTENT","STREAM_LIST_LOADING_PLACEHOLDER","FILTERS","FILTER_OPTION","SEARCH_QUERY","TEMPLATES","DEFAULT_PAGED_CONTENT_CONFIG","pagingbar","ignoreControlWhileLoading","controlPlacementBottom","ariaLabels","itemsperpagecomponents","hideContent","root","find","addClass","removeClass","showContent","emptyContent","empty","getDefaultTemplateContext","pagingdropdown","skipjs","ignorecontrolwhileloading","controlplacementbottom","buildTemplateContext","streamVideos","templateContext","videos","forEach","streamVideo","push","render","itemsperpage","templateName","load","limit","videosLimit","lastId","uploadedVideos","statusfilter","sort","search","offset","updatePreferences","attr","args","loadEventsFromPageData","pageData","actions","lastIds","preloadedPages","pageNumber","lastPageNumber","hasOwnProperty","eventsPromise","then","result","allItemsLoaded","data","createPagedContent","pageLimit","firstLoad","paginationAriaLabel","additionalConfig","hasContent","config","extend","get_string","isArray","value","string","paginationnav","createWithTotalAndLimit","pagesData","promises","pagePromise","catch","exception","when","apply","resolve","init","Deferred","streamListContent","loadingPlaceholder","html","js","replaceNodeContents","rootSelector","registerSelector","Selector","searchInput","events","activate","on","query","val","preferences","console","log","e","option","target","filter","pref","originalEvent","preventDefault"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\ndefine(\n[\n    'jquery',\n    'core/notification',\n    'core/templates',\n    'core/paged_content_factory',\n    'core/str',\n    'block_stream/stream_repository',\n    'block_stream/renderstream',\n    'core/custom_interaction_events'\n],\nfunction(\n    $,\n    Notification,\n    Templates,\n    PagedContentFactory,\n    Str,\n    streamVideosRepository,\n    RenderStream,\n    CustomEvents\n) {\n\n    var length, videosOffset, StatusFilter, SortFilter, SearchFilter;\n    \n    var limit = 10;\n\n    var TotalNumberOfVideos;\n\n    var SELECTORS = {\n        EMPTY_MESSAGE: '[data-region=\"empty-message\"]',\n        ROOT: '[data-region=\"stream-list-container\"]',\n        STREAM_LIST_CONTENT: '[data-region=\"stream-list-content\"]',\n        STREAM_LIST_LOADING_PLACEHOLDER: '[data-region=\"stream-list-loading-placeholder\"]',\n        FILTERS: '[data-region=\"filter\"]',\n        FILTER_OPTION: '[data-filter]',\n        SEARCH_QUERY: '[data-filter=\"searchfilter\"]'\n    };\n\n    var TEMPLATES = {\n        STREAM_LIST_CONTENT: 'block_stream/video-list-item'\n    };\n\n    // We want the paged content controls below the paged content area\n    // and the controls should be ignored while data is loading.\n    var DEFAULT_PAGED_CONTENT_CONFIG = {\n        pagingbar: true,\n        ignoreControlWhileLoading: true,\n        controlPlacementBottom: true,\n        ariaLabels: {\n            itemsperpagecomponents: 'ariaeventlistpagelimit, block_timeline',\n        }\n    };\n\n    /**\n     * Hide the content area and display the empty content message.\n     *\n     * @param {object} root The container element\n     */\n    var hideContent = function(root) {\n        root.find(SELECTORS.STREAM_LIST_CONTENT).addClass('hidden');\n        root.find(SELECTORS.EMPTY_MESSAGE).removeClass('hidden');\n    };\n\n    /**\n     * Show the content area and hide the empty content message.\n     *\n     * @param {object} root The container element\n     */\n    var showContent = function(root) {\n        root.find(SELECTORS.STREAM_LIST_CONTENT).removeClass('hidden');\n        root.find(SELECTORS.EMPTY_MESSAGE).addClass('hidden');\n    };\n\n    /**\n     * Empty the content area.\n     *\n     * @param {object} root The container element\n     */\n    var emptyContent = function(root) {\n        root.find(SELECTORS.STREAM_LIST_CONTENT).empty();\n    };\n\n\n\n    /**\n     * Get the default context to render the paged content mustache\n     * template.\n     *\n     * @return {object}\n     */\n    var getDefaultTemplateContext = function() {\n        return {\n            pagingbar: true,\n            pagingdropdown: true,\n            skipjs: true,\n            ignorecontrolwhileloading: true,\n            controlplacementbottom: false\n        };\n    };\n\n    /**\n     * @param {array} streamVideos List of calendar events\n     * @param {Number} midnight A timestamp representing midnight in the user's timezone\n     * @return {object}\n     */\n    var buildTemplateContext = function(streamVideos) {\n        var templateContext = getDefaultTemplateContext();\n        templateContext.videos = [];\n\n        streamVideos.forEach(function(streamVideo) {\n            templateContext.videos.push(streamVideo);\n        });\n        return templateContext;\n    };\n\n    /**\n     * Render the HTML for the given calendar events.\n     *\n     * @param {array} streamVideos  A list of calendar events\n     * @param {Number} midnight A timestamp representing midnight for the user\n     * @return {promise} Resolved with HTML and JS strings.\n     */\n    var render = function(streamVideos) {\n        var templateContext = buildTemplateContext(streamVideos);\n        templateContext.itemsperpage = 10;\n        var templateName = TEMPLATES.STREAM_LIST_CONTENT;\n\n        return Templates.render(templateName, templateContext);\n    };\n\n    /**\n     * Retrieve a list of calendar events from the server for the given\n     * constraints.\n     *\n     * @param {Number} midnight The user's midnight time in unix timestamp.\n     * @param {Number} limit Limit the result set to this number of items\n     * @param {Number} videosOffset How many days (from midnight) to offset the results from\n     * @param {int|undefined} videosLimit How many dates (from midnight) to limit the result to\n     * @param {int|falsey} lastId The ID of the last seen event (if any)\n     * @param {int|undefined} courseId Course ID to restrict events to\n     * @return {promise} A jquery promise\n     */\n    var load = function( limit, videosOffset, videosLimit, lastId, StatusFilter) {\n        return streamVideosRepository.uploadedVideos({\n          statusfilter: StatusFilter,\n          sort: SortFilter,\n          limit: limit,\n          search: SearchFilter,\n          offset: videosOffset\n        });\n    };\n\n    var updatePreferences = function() {\n        StatusFilter = $(SELECTORS.ROOT).attr('data-statusfilter');\n        SearchFilter = $(SELECTORS.ROOT).attr('data-searchquery');\n\n        var args = {\n          statusfilter: StatusFilter,\n          search: SearchFilter,\n          limit: limit,\n          offset: videosOffset\n        };\n\n\n        return streamVideosRepository.updatePreferences(args);\n    };\n\n    /**\n     * Event listener for the Display filter (cards, list).\n     *\n     * @param {object} root The root element for the overview block\n     */\n    var registerSelector = function(root) {\n        if(typeof root != 'undefined'){\n            root = $(root);         \n        }else{\n            root = $(SELECTORS.ROOT);\n        }\n\n        var Selector = root.find(SELECTORS.FILTERS);\n        var searchInput = root.find(SELECTORS.SEARCH_QUERY);\n\n        \n        CustomEvents.define(Selector, [CustomEvents.events.activate]);\n        $('#id_search').on('click', function(e){\n            var query = $(searchInput).val();\n            root.attr('data-searchquery', query);\n            var preferences = updatePreferences();\n                preferences.then(function(result) {\n                    console.log(result);\n                    root.attr('data-length', result.length);\n                    init();\n                });\n        });\n\n        Selector.on(\n            CustomEvents.events.activate,\n            SELECTORS.FILTER_OPTION,\n            function(e, data) {\n                var option = $(e.target);\n\n                var filter = option.attr('data-filter');\n                var pref = option.attr('data-pref');\n\n                root.attr('data-' + filter, option.attr('data-value'));\n         \n                var preferences = updatePreferences();\n                preferences.then(function(result) {\n                    root.attr('data-length', result.length);\n                    init();\n                });\n\n                data.originalEvent.preventDefault();\n            }\n        );\n    };\n\n    /**\n     * Handle a single page request from the paged content. Uses the given page data to request\n     * the events from the server.\n     *\n     * Checks the given preloadedPages before sending a request to the server to make sure we\n     * don't load data unnecessarily.\n     *\n     * @param {object} pageData A single page data (see core/paged_content_pages for more info).\n     * @param {object} actions Paged content actions (see core/paged_content_pages for more info).\n     * @param {Number} midnight The user's midnight time in unix timestamp.\n     * @param {object} lastIds The last event ID for each loaded page. Page number is key, id is value.\n     * @param {object} preloadedPages An object of preloaded page data. Page number as key, data promise as value.\n     * @param {int|undefined} StatusFilter Course ID to restrict events to\n     * @param {Number} videosOffset How many days (from midnight) to offset the results from\n     * @param {int|undefined} videosLimit How many dates (from midnight) to limit the result to\n     * @return {object} jQuery promise resolved with calendar events.\n     */\n    var loadEventsFromPageData = function(\n        pageData,\n        actions,\n        lastIds,\n        preloadedPages,\n        StatusFilter,\n        videosOffset,\n        videosLimit\n    ) {\n\n        var pageNumber = pageData.pageNumber;\n        var limit = pageData.limit;\n        var lastPageNumber = pageNumber;\n        var videosOffset = (pageNumber-1) * videosLimit;\n\n        // This is here to protect us if, for some reason, the pages\n        // are loaded out of order somehow and we don't have a reference\n        // to the previous page. In that case, scan back to find the most\n        // recent page we've seen.\n        while (!lastIds.hasOwnProperty(lastPageNumber)) {\n            lastPageNumber--;\n        }\n        // Use the last id of the most recent page.\n        var lastId = lastIds[lastPageNumber];\n        var eventsPromise = null;\n\n        if (preloadedPages && preloadedPages.hasOwnProperty(pageNumber)) {\n            // This page has been preloaded so use that rather than load the values\n            // again.\n            eventsPromise = preloadedPages[pageNumber];\n        } else {\n            // Load one more than the given limit so that we can tell if there\n            // is more content to load after this.\n            eventsPromise = load(limit + 1, videosOffset, videosLimit, lastId, StatusFilter);\n        }\n\n        return eventsPromise.then(function(result) {\n            if (!result.length) {\n                // If we didn't get any events back then tell the paged content\n                // that we're done loading.\n                actions.allItemsLoaded(pageNumber);\n                return [];\n            }\n            var streamVideos = result.data;\n            TotalNumberOfVideos  = streamVideos.length;\n            \n\n            \n            // We expect to receive limit + 1 events back from the server.\n            // Any less means there are no more events to load.\n            var loadedAll = TotalNumberOfVideos <= limit;\n\n            return streamVideos;\n        });\n    };\n\n    /**\n     * Use the paged content factory to create a paged content element for showing\n     * the event list. We only provide a page limit to the factory because we don't\n     * know exactly how many pages we'll need. This creates a paging bar with just\n     * next/previous buttons.\n     *\n     * This function specifies the callback for loading the event data that the user\n     * is requesting.\n     *\n     * @param {int|array} pageLimit A single limit or list of limits as options for the paged content\n     * @param {object} preloadedPages An object of preloaded page data. Page number as key, data promise as value.\n     * @param {Number} midnight The user's midnight time in unix timestamp.\n     * @param {object} firstLoad A jQuery promise to be resolved after the first set of data is loaded.\n     * @param {int|undefined} StatusFilter Course ID to restrict events to\n     * @param {Number} videosOffset How many days (from midnight) to offset the results from\n     * @param {int|undefined} videosLimit How many dates (from midnight) to limit the result to\n     * @param {string} paginationAriaLabel String to set as the aria label for the pagination bar.\n     * @param {object} additionalConfig Additional config options to pass to pagedContentFactory\n     * @return {object} jQuery promise.\n     */\n    var createPagedContent = function(\n        length,\n        pageLimit,\n        preloadedPages,\n        firstLoad,\n        StatusFilter,\n        videosOffset,\n        paginationAriaLabel,\n        additionalConfig\n    ) {\n        // Remember the last event id we loaded on each page because we can't\n        // use the offset value since the backend can skip events if the user doesn't\n        // have the capability to see them. Instead we load the next page of events\n        // based on the last seen event id.\n        var lastIds = {'1': 0};\n        var hasContent = false;\n        var config = $.extend({}, DEFAULT_PAGED_CONTENT_CONFIG, additionalConfig);\n\n        return Str.get_string(\n                'ariaeventlistpagelimit',\n                'block_timeline',\n                $.isArray(pageLimit) ? pageLimit[0].value : pageLimit\n            )\n            .then(function(string) {\n                config.ariaLabels.itemsperpage = string;\n                config.ariaLabels.paginationnav = paginationAriaLabel;\n                return string;\n            })\n            .then(function() {\n                return PagedContentFactory.createWithTotalAndLimit(length,\n                    pageLimit,\n                    function(pagesData, actions) {\n                        var promises = [];\n                        pagesData.forEach(function(pageData) {\n                            var pageNumber = pageData.pageNumber;\n                            // Load the page data.\n                            var pagePromise = loadEventsFromPageData(\n                                pageData,\n                                actions,\n                                lastIds,\n                                preloadedPages,\n                                StatusFilter,\n                                videosOffset,\n                                pageLimit\n                            ).then(function(streamVideos) {\n\n                                if (streamVideos.length) {\n                                    // Remember that we've loaded content.\n                                    hasContent = true;\n                                    return render(streamVideos);\n                                } else {\n                                    return streamVideos;\n                                }\n                            })\n                            .catch(Notification.exception);\n\n                            promises.push(pagePromise);\n                        });\n\n                        $.when.apply($, promises).then(function() {\n                            // Tell the calling code that the first page has been loaded\n                            // and whether it contains any content.\n                            firstLoad.resolve(hasContent);\n                            return;\n                        })\n                        .catch(function() {\n                            firstLoad.resolve(hasContent);\n                        });\n\n                        return promises;\n                    },\n                    config\n                );\n            });\n    };\n\n    \n    /**\n     * Create a paged content region for the calendar events in the given root element.\n     * The content of the root element are replaced with a new paged content section\n     * each time this function is called.\n     *\n     * This function will be called each time the offset or limit values are changed to\n     * reload the event list region.\n     *\n     * @param {object} root The event list container element\n     * @param {int|array} pageLimit A single limit or list of limits as options for the paged content\n     * @param {object} preloadedPages An object of preloaded page data. Page number as key, data promise as value.\n     * @param {string} paginationAriaLabel String to set as the aria label for the pagination bar.\n     * @param {object} additionalConfig Additional config options to pass to pagedContentFactory\n     */\n    var init = function(root, pageLimit = 5, preloadedPages, paginationAriaLabel, additionalConfig) {\n\n\n        if(typeof root != 'undefined'){\n            root = $(root);         \n        }else{\n            root = $(SELECTORS.ROOT);\n        }\n\n        // Create a promise that will be resolved once the first set of page\n        // data has been loaded. This ensures that the loading placeholder isn't\n        // hidden until we have all of the data back to prevent the page elements\n        // jumping around.\n        var firstLoad = $.Deferred();\n        var streamListContent = root.find(SELECTORS.STREAM_LIST_CONTENT);\n        var loadingPlaceholder = root.find(SELECTORS.STREAM_LIST_LOADING_PLACEHOLDER);\n         length = root.attr('data-length');\n         videosOffset = root.attr('data-videosOffset');\n         StatusFilter = root.attr('data-statusfilter');\n         SortFilter = root.attr('data-sortfilter');\n         SearchFilter = root.attr('data-searchquery');\n     \n       \n        // Make sure the content area and loading placeholder is visible.\n        // This is because the init function can be called to re-initialise\n        // an existing event list area.\n       \n        emptyContent(root);\n        showContent(root);\n        loadingPlaceholder.removeClass('hidden');\n   \n\n        // Created the paged content element.\n        return createPagedContent(length,pageLimit, preloadedPages, firstLoad, StatusFilter, videosOffset, \n                paginationAriaLabel,  additionalConfig)\n            .then(function(html, js) {\n                html = $(html);\n                // Hide the content for now.\n                html.addClass('hidden');\n                // Replace existing elements with the newly created paged content.\n                // If we're reinitialising an existing event list this will replace\n                // the old event list (including removing any event handlers).\n                Templates.replaceNodeContents(streamListContent, html, js);\n\n                firstLoad.then(function(hasContent) {\n                    // Prevent changing page elements too much by only showing the content\n                    // once we've loaded some data for the first time. This allows our\n                    // fancy loading placeholder to shine.\n                    html.removeClass('hidden');\n                    loadingPlaceholder.addClass('hidden');\n\n                    if (!hasContent) {\n                        // If we didn't get any data then show the empty data message.\n                        hideContent(root);\n                    }\n\n                    return hasContent;\n                })\n                .catch(function() {\n                    return false;\n                });\n\n                return html;\n            })\n            .catch(Notification.exception);\n    };\n\n    return {\n        init: init,\n        rootSelector: SELECTORS.ROOT,\n        registerSelector: registerSelector\n    };\n});\n"],"file":"streamcontent.min.js"}